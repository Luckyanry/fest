{"version":3,"sources":["js/multi-animated-counter.js"],"names":["$","visibilityIds","counterClass","defaultSpeed","window","on","getVisibilityStatus","elValFromTop","windowHeight","height","windowScrollValFromTop","scrollTop","forEach","item","index","Math","ceil","offset","top","err","counter_init","groupId","num","speed","direction","each","attr","easing","undefined","addClass","doCount","groupClass","className","animate","duration","step","now","text","floor","complete"],"mappings":"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","file":"multi-animated-counter.763943ff.js","sourceRoot":"../src","sourcesContent":["$(function() {\n  let visibilityIds = ['#counters_1', '#counters_2', '#counters_3', '#info'] //must be an array, could have only one element\n  let counterClass = '.counter'\n  let defaultSpeed = 3000 //default value\n\n  // END CONFIG\n\n  //init if it becomes visible by scrolling\n  $(window).on('scroll', function() {\n    getVisibilityStatus()\n  })\n\n  //init if it's visible by page loading\n  getVisibilityStatus()\n\n  function getVisibilityStatus() {\n    elValFromTop = []\n    var windowHeight = $(window).height(),\n      windowScrollValFromTop = $(this).scrollTop()\n\n    visibilityIds.forEach(function(item, index) {\n      //Call each class\n      try {\n        //avoid error if class not exist\n        elValFromTop[index] = Math.ceil($(item).offset().top)\n      } catch (err) {\n        return\n      }\n      // if the sum of the window height and scroll distance from the top is greater than the target element's distance from the top,\n      //it should be in view and the event should fire, otherwise reverse any previously applied methods\n      if (windowHeight + windowScrollValFromTop > elValFromTop[index]) {\n        counter_init(item)\n      }\n    })\n  }\n\n  function counter_init(groupId) {\n    let num,\n      speed,\n      direction,\n      index = 0\n    $(counterClass).each(function() {\n      num = $(this).attr('data-TargetNum')\n      speed = $(this).attr('data-Speed')\n      direction = $(this).attr('data-Direction')\n      easing = $(this).attr('data-Easing')\n      if (speed == undefined) speed = defaultSpeed\n      $(this).addClass('c_' + index) //add a class to recognize each counter\n      doCount(num, index, speed, groupId, direction, easing)\n      index++\n    })\n  }\n\n  function doCount(num, index, speed, groupClass, direction, easing) {\n    let className = groupClass + ' ' + counterClass + '.' + 'c_' + index\n    if (easing == undefined) easing = 'swing'\n    $(className).animate(\n      {\n        num,\n      },\n      {\n        duration: +speed,\n        easing: easing,\n        step: function(now) {\n          if (direction == 'reverse') {\n            $(this).text(num - Math.floor(now))\n          } else {\n            $(this).text(Math.floor(now))\n          }\n        },\n        complete: doCount,\n      },\n    )\n  }\n})\n"]}